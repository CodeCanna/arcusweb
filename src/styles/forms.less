/**
* @stylesheet forms.less Forms
* @parent styles.baseline-elements
*
* @description
* Forms are built with both style and accessibility in mind. All forms should have labels containing `id`s which match the `name` tag on inputs. See the demo for examples.
*
* **Note about Error Messages:** Because we are replacing the label with the error message, whenever possible the error text should include label information.
*
* >*Example: "Email Address" errors to "Invalid Email Address".*
*
* @demo ./src/styles/demos/forms.html 670
*
**/
form {
  text-align: left;
}
.form-error { //this is a form-wide error
  color: @cardinal;
  margin-bottom: @gutter;
  + .form-error {
    margin-top: -(@gutter/2); //keeps multiple paragraph errors grouped together
  }
}
.input-wrapper {
  position: relative;
  margin-bottom: @gutter/2;
  &:not(:first-of-type) {
    margin-top: @gutter*1.5;
  }
  &.alternate-style {
    .character-count {
      visibility: hidden;
      padding-top: 0;
    }
    input {
      &:hover {
        color: @link-color;
      }
      &:focus:not([value=""]) {
        border-bottom: 1px dashed @link-color;
        color: @link-color;

        &~.character-count {
          visibility: visible;
        }
      }
    }
  }
  label,
  input,
  textarea {
    display: flex;
    width: 100%;
  }
  label {
    .font-demibold;
    letter-spacing: 2px;
    position: absolute;
    bottom: 10px;
    text-align: left;
    color: @grouse;
    cursor: text;
    line-height: 1.3;
    text-transform: uppercase;
    transition: all .3s linear;
    pointer-events: none;
    button {
      margin-bottom: 0;
    }
    p {
      .font-medium;
    }
    small, .small {
      text-transform: none;
    }
  }
  input {
    .font-regular;
    background-color: transparent;
    border-top: none;
    border-right: none;
    border-left: none;
    border-bottom: @border;
    outline: none;
    line-height: 2;
    font-size: @font-size-large;
    border-radius: 0;
    &:focus,
    &:not([value=""]) { // slide label up on focus
      + label {
        bottom: 42px;
        cursor: default;
      }
    }
    &:-webkit-autofill { // slide up label on chrome autofill
      + label {
        bottom: 42px;
        cursor: default;
      }
    }
  }
  textarea {
    .font-regular;
    font-size: @font-size-large;
    min-height: @gutter;
    border: @border;
    outline: none;
    border-radius: @border-radius;
    overflow: auto; // remove scrollbars in IE
    padding: @gutter/2;
    line-height: 1;
    + label {
      width: 95%;
      top: @gutter/2;
      left: @gutter/2;
    }
    &:focus,
    &:not(:empty) { // slide label up on focus
      + label {
        top: -@gutter;
        left: 0;
        cursor: default;
      }
    }
    &:placeholder-shown {
      .font-medium-italic;
      font-size: @font-size-small;
    }
  }
  &.long-label {
    .breakpoint(sm-down, {
      margin-top: @gutter*2;
    });
    textarea {
      &:focus,
      &:not(:empty) {
        + label {
          .breakpoint(sm-down, {
            top: -45px;
          });
        }
      }
    }
  }
}

/// RADIO ///
.radio-wrapper {
  list-style-type: none;
  position: relative;
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-end;
  align-items: center;
  margin-bottom: @gutter/2;
  min-width: 0;
  label {
    .font-regular;
    color: @swift;
    font-size: @font-size-large;
    cursor: pointer;
    padding-left: (@gutter * 2);
    margin-left: -(@gutter * 2);
    z-index: @zindex-radio-button;
    width: 100%;
    text-transform: capitalize;
    &.no-text-transform {
      text-transform: none;
    }
    .breakpoint(lg, {
      white-space: nowrap;
    });
    button {
      margin-bottom: 0;
    }
    small, .small {
      text-transform: none;
    }
  }
  .check, .add {
    color: @link-color-dark;
    border: 1px solid @link-color;
    border-radius: 100%;
    height: 30px;
    width: 30px;
    transition: all .25s linear;
    margin-right: @gutter/2;
    z-index: (@zindex-radio-button - 1);
    flex-shrink: 0;
    flex-grow: 0;
    align-self: flex-start;
    position: relative;
    &:before {
      content: '\e913';
      font-family: 'arcus-app-icons';
      position: absolute;
      color: transparent;
      top: 7px;
      left: 7px;
      font-size: 14px;
      line-height: 1;
    }

    &.hidden {
      visibility: hidden;
      pointer-events: none;
    }
    /// VERTICALLY CENTERED CHECKBOX/RADIO ON CONTENT ///
    &.centered-checkbox {
      align-self: center;
    }
  }

  .add {
    &:before {
      color: @link-color;
      content: "\e912";
    }
  }
}
input[type=radio],
.radio-checkbox {
  position: absolute;
  visibility: hidden;
  &:checked ~ .check {
    background-color: @link-color;
    &:before {
      color: @link-color-dark;
    }
  }
  &:disabled ~ label, &:disabled label {
    color: @grouse;
  }
  &:disabled ~ .check {
    background-color: @pigeon;
    border-color: @grouse;
    color: @grouse;
  }
  &:disabled:checked ~ .check {
    background-color: @pigeon;
    border-color: @grouse;
    &:before {
      color: @grouse;
    }
  }
}
/// SMALL RADIO VARIANT ///
.small-radio {
  label {
    font-size: @font-size-base;
    padding-left: (@gutter * 2) - 5px;
  }
  .check {
    height: 20px;
    width: 20px;
    &:before {
      top: 5px;
      left: 5px;
      font-size: 9px;
    }
  }
}
//// COMPLEX RADIO/CHECKBOX LABELS ///
.complex-label {
  display: flex;
  align-items: center;
  color: @text-color;
  .name {
    width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    line-height: 1.2;
  }
  .name-multi {
    text-overflow: unset;
    overflow: unset;
    white-space: normal;
  }
  .icon {
    display: flex;
    margin-right: @gutter/2;
    font-size: @font-size-larger;
    width: 50px;
    justify-content: center;
  }
}
/// TOGGLE VARIABLES ///
@switch-width: 56px;
@switch-height: 30px;

// TOGGLE //
.toggle-container{
  width: @switch-width;
  height: @switch-height;
  *,
  *:before,
  *:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    transition: .25s ease-in-out;
    outline: none;
  }
  .toggle-control,
  .toggle-control:active{
    position: absolute;
    height: 0;
    width: 0;
    opacity: 0;
    border: none;
    outline: none;
  }
  .checkbox-label{
    display: block;
    position: relative;
    height: @switch-height + 2px;
    border-radius: @switch-height/2 + 2;
    background: @heron;
    cursor: pointer;
    box-shadow: inset 0 2px 2px rgba(0,0,0,0.2);
    &:before {
      content: '';
      display: block;
      position: absolute;
      z-index: 1;
      height: @switch-height;
      width: @switch-height;
      border-radius: 100%;
      top: 1px;
      left: 1px;
      right: auto;
      background: white;
      border: 2px solid @pigeon;
      box-shadow: 0 4px 4px rgba(0,0,0,0.1);
    }
  }
  .toggle-control:checked +
  .checkbox-label{
    box-shadow: inset 0 0 0 (@switch-height + 2px) @link-color;
  }
  .toggle-control:checked +
  .checkbox-label:before{
    left: @switch-width - @switch-height - 1px;
    border: 2px solid white;
  }
}

// DROPDOWN CUSTOMIZATION //
.dropdown-wrapper {
  position: relative;
  margin-bottom: @gutter/2.5;
  padding-top: @gutter/2;
  &:not(:first-of-type) {
    padding-top: @gutter/1.5;
  }

  label {
    .font-demibold;
    line-height: 1.3;
    letter-spacing: 2px;
    color: @grouse;
    text-transform: uppercase;
    z-index: 11;
    text-align: left;
  }
  .ui.multiple.dropdown  {
    & > .label { //overriding semantic-ui styles for multiselect dropdown
      border-radius: @border-radius;
      // using em to keep consistency with semantic text element padding conventions
      padding-top: .26em;
      padding-bottom: .26em;

      &:hover { //overriding global <a> styles
        text-decoration: none;
        cursor: default;
      }
    }
    i.delete.icon {
      .icon-app;

      display: inline-block;
      font-size: @font-size-smaller;
      font-weight: bold;
      margin-left: 10px;
      margin-bottom: 2px;
      transform: rotate(45deg);
      transition: opacity 600ms linear;
      opacity: .4;

      &:hover {
        cursor: pointer;
      }

      &:before {
        content: "\e912";
      }
    }
  }
  .ui.selection.dropdown { //overriding semantic-ui styles
    .font-regular;
    font-size: @font-size-base;
    border-radius: 3px;
    border-color: @heron;
    color: @swift;
    min-width: 9em;
    width: 100%;
    min-height: 1em;
    z-index: @zindex-dropdown;
    &.active,
    &.visible {
      z-index: @zindex-popover;
      &:hover {
        border-color: @heron;
      }
      .menu {
        border-color: @heron;
      }
    }
    > input.search {
      z-index: 0;
    }
    > .dropdown.icon {
      font-family: 'arcus-app-icons';
      color: @link-color;
      top: 39%;
      font-size: 8px;
      &:before {
        content: "\e914";
        transform: rotateY(180deg);
      }
    }
    .menu {
      max-height: 30vh;
      > .item {
        font-size: @font-size-base;
        border-color: @heron;
        line-height: 2;
      }
      &::-webkit-scrollbar {
        width: 0;
      }
    }
  }
  .ui.dropdown:not(.button) {
    > .default.text {
      color: @swift;
    }
  }
}
.disabled {
  .dropdown-wrapper {
      pointer-events: none;
      cursor: default;
    .dropdown {
      color: @grouse;
    }
    .ui.selection.dropdown > .dropdown.icon {
      color: @grouse;
    }
  }
}
.input-wrapper,
.dropdown-wrapper {
  .error { //this is an input error, replacing the label
    .font-demibold;
    display: none;
    text-align: left;
    text-transform: uppercase;
    z-index: 11;

  }
}
.input-wrapper {
  .error {
    bottom: @gutter;
    position: absolute;
  }
  textarea ~ .error {
    bottom: 66px;
  }
  textarea[character-count] ~ .error {
    bottom: 90px;
  }
}
.dropdown-wrapper {
  .error {
    margin-bottom: 0;
  }
}
.is-invalid {
  input,
  .ui.selection.dropdown {
    border-color: @cardinal;
  }
  .error {
    display: flex;
  }
  label {
    display: none;
  }
}

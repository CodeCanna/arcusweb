<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-device-action-changeShadeLevel">
  <template>
    <can-import from="i2web/components/spinner/" />
    <arcus-spinner {formatter}="@formatter" {(value)}="device['shade:level']" min="0" max="100" {step}="10" />
  </template>
  <script type="view-model">
    import canMap from 'can-map';
    import 'can-map-define';
    import Errors from 'i2web/plugins/errors';
    import Device from 'i2web/models/device';
    import _ from 'lodash';

    export default canMap.extend({
      define: {
        device: {
          Type: Device,
        },
      },
      init() {
        this.saveDevice = _.debounce(() => {
          this.attr('device').save()
            .catch(e => Errors.log(e, true));
        }, 1000);
      },
      formatter(val) {
        return `${val.toFixed(0)}<span class="value-unit">%</span>`;
      },
    });
  </script>
  <script type="events">
    export default {
      '{viewModel.device} shade:level': function onShadeLevelChanged(device, ev, level) {
        // We want to round the level to the nearest 5th in the event that
        // somewhere the level is set somewhere else not to the 5th.
        const roundedLevel = (Math.round(level / 10) * 10);

        this.viewModel.attr('device.shade:level', roundedLevel);
        this.viewModel.saveDevice();
      },
    };
  </script>
</can-component>
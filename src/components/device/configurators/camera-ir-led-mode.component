<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-device-configurator-camera-ir-led-mode">
  <template>
    <p>Infrared light improves image quality in low-light situations, and will display clips in black and white.</p>
    <hr />
    <arcus-generic-selector {things}="things" {is-selected}="@isSelected" {select-option}="@selectThing" />
  </template>
  <script type="view-model">
    import _ from 'lodash';
    import canMap from 'can-map';
    import canList from 'can-list';
    import 'can-map-define';
    import Device from 'i2web/models/device';
    import Errors from 'i2web/plugins/errors';

    const MODE_DESCRIPTION = {
      AUTO: 'The camera adjusts automatically.',
      ON: 'The infrared light will always be on.',
      OFF: 'The infrared light will always be off.',
    };

    export default canMap.extend({
      define: {
        device: {
          Type: Device,
        },
        things: {
          Type: canList,
          get() {
            const modes = this.attr('device.camera:irLedSupportedModes');
            const things = new canList();
            if (modes && modes.length) {
              for (let i = 0; i < modes.length; i++) {
                const description = MODE_DESCRIPTION[modes[i]] || ' ';
                const displayname = _.startCase(_.toLower(modes[i]));
                things.push({
                  value: modes[i],
                  name: `<span class="name">${displayname}<br/> <small> ${description}</small></span>`,
                });
              }
            }
            return things;
          },
        },
      },
      title: 'Infrared Light',
      isSelected(thing) {
        const device = this.attr('device');
        return device.attr('camera:irLedMode') === thing.attr('value');
      },
      selectThing(thing) {
        const device = this.attr('device');
        device.attr('camera:irLedMode', thing.attr('value'));
        device.save()
          .catch(e => Errors.log(e, true));
      },
    });
  </script>
</can-component>
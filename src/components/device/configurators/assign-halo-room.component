<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-device-configurator-assign-halo-room">
  <template>
    {{#unless forPairingCustomization}}
      <div class="configurator-header">
        <h4 class="config-title">Room</h4>
      </div>
    {{/unless}}
    <can-import from="semantic-ui-dropdown-canjs"/>
    <div class="dropdown-wrapper">
      {{#unless forPairingCustomization}}
        <label for="assign-room">Room Name</label>
      {{/unless}}
      <div class="ui selection dropdown" semantic-dropdown>
        <input type="hidden" {$value}="device['halo:room']" id="assign-room">
        <i class="dropdown icon"></i>
        <div class="default text">Room Name</div>
        <div class="menu">
          {{#each device['halo:roomNames']}}
            <div class="item" data-value="{{%key}}" ($click)="saveRoom(%key)">
              {{.}}
            </div>
          {{/each}}
        </div>
      </div>
    </div>
  </template>
  <script type="view-model">
    import canMap from 'can-map';
    import 'can-map-define';
    import Errors from 'i2web/plugins/errors';
    import Device from 'i2web/models/device';

    export default canMap.extend({
      define: {
        device: {
          Type: Device,
        },
        /**
         * @property {htmlboolean} forPairingCustomization
         * @parent i2web/components/device/configurators/
         * @description Attribute that indicates if the component is being used during pairing customization
         * which impacts whether or not the header and label will be shown
         */
        forPairingCustomization: {
          type: 'htmlbool',
          value: false,
        },
      },
      saveRoom(room) {
        const device = this.attr('device');
        device.attr('halo:room', room);
        device.save().catch(e => Errors.log(e, true));
      },
    });
  </script>
</can-component>

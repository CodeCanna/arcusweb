<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-device-panel-status-watersoftener">
  <view>
    {{status}}
  </view>
  <script type="view-model">
    import canMap from 'can-map';
    import moment from 'moment';
    import 'can-map-define';
    import WaterSoftenerCapability from 'i2web/models/capability/WaterSoftener';
    import Device from 'i2web/models/device';

    export default canMap.extend({
      define: {
        /**
         * @property {Device} device
         * @parent i2web/components/device/panel/status/waterSoftener
         * @description The water softener device.
         */
        device: {
          Type: Device,
        },
        /**
         * @property {String} status
         * @parent i2web/components/device/panel/status/waterSoftener
         * @description The status of the device to display on the panel
         */
        status: {
          get() {
            const device = this.attr('device');
            const formattedRechargingTime = this.attr('device.web:watersoftener:formattedRechargeTime');
            switch (device.attr('watersoftener:rechargeStatus')) {
              case WaterSoftenerCapability.RECHARGESTATUS_RECHARGE_SCHEDULED:
                return `Recharge Time: ${this.rechargeWhen()}`;
              case WaterSoftenerCapability.RECHARGESTATUS_RECHARGING:
                return `Recharging: ${formattedRechargingTime} Left`;
              case WaterSoftenerCapability.RECHARGESTATUS_READY:
                return '';
              default:
                return '';
            }
          },
        },
      },
      /**
       * @function {String} rechargeWhen
       * @description Convert the recharge start time to XX AM|PM (e.g. 10 AM)
       */
      rechargeWhen() {
        const startTime = this.attr('device').attr('watersoftener:rechargeStartTime');
        return moment().hour(startTime).format('h[:00] A');
      },
    });
  </script>
</can-component>

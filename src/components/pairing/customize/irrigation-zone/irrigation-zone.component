<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-pairing-customize-irrigation-zone">
  <template>
    <can-import from="i2web/components/subsystem/lawn-garden/controller-editor/" />
    <div class="box-gray-radius">
    <arcus-lawn-garden-controller-editor
      {device}="device"
      {on-duration-changed}="@waterDurationChanged"
      for-pairing-customization
    />
    </div>
  </template>
  <script type="view-model">
    import CanMap from 'can-map';
    import Device from 'i2web/models/device';

    export default CanMap.extend({
      define: {
        /**
         * @property {Object} customizationStep
         * @parent i2web/components/pairing/customize/irrigation-zone
         * @description Customization step that contains display text
         */
        customizationStep: {
          type: '*',
        },
        /**
         * @property {Device} device
         * @parent i2web/components/pairing/customize/irrigation-zone
         * @description Device model relevant to the customization info
         */
        device: {
          Type: Device,
        },
        /**
         * @property {String} title
         * @parent i2web/components/pairing/customize/irrigation-zone
         * @description Header field from the customization step, to be displayed as the primary
         * title  directly below the staged progress bar.
         */
        title: {
          get() {
            const step = this.attr('customizationStep');
            const fallBackTitle = `Customize Zone${(step.action === 'IRRIGATION_ZONE') ? '' : 's'}`;
            return step && step.header ? step.header : fallBackTitle;
          },
        },
        /**
         * @property {function} whenComplete
         * @parent i2web/components/pairing/customize/irrigation-zone
         * @description Accept a whenComplete method as an optional parameter for the component;
         * if specified, invoke this method when the contact type is changed
         */
        whenComplete: {},
      },
      /**
       * @function waterDurationChanged
       * @parent i2web/components/pairing/customize/irrigation-zone
       * @description Save the device when watering duration of a particular zone
       * changes.
       */
      waterDurationChanged() {
        if (this.attr('whenComplete')) {
          const action = this.attr('customizationStep.action');
          this.attr('whenComplete')(action);
        }
      },
    });
  </script>
</can-component>

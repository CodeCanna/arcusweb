<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-pairing-customize-room">
  <template>
    <can-import from="i2web/components/device/configurators/assign-halo-room.component" />
    <div class="box-gray-radius">
      <h4>{{subtitle}}</h4>
      <hr>
      {{#each description}}
        <p>{{.}}</p>
      {{/each}}
      <arcus-device-configurator-assign-halo-room
        {(device)}="device"
        for-pairing-customization
      />
    </div>
  </template>
  <script type="view-model">
    import CanMap from 'can-map';
    import 'can-map-define';
    import Device from 'i2web/models/device';

    export default CanMap.extend({
      define: {
        /**
         * @property {Object} customizationStep
         * @parent i2web/components/pairing/customize/room
         * @description Customization step that contains display text
         */
        customizationStep: {
          type: '*',
        },
        /**
         * @property {Array} description
         * @parent i2web/components/pairing/customize/room
         * @description Description field from the customization step
         */
        description: {
          get() {
            const step = this.attr('customizationStep');
            return (step && step.description && step.description.length > 0)
              ? step.description
              : ['Halo will use this room name when speaking to you in the event of an alarm.'];
          },
        },
        /**
         * @property {Device} device
         * @parent i2web/components/pairing/customize/room
         * @description The device being customized
         */
        device: {
          Type: Device,
        },
        /**
         * @property {String} subtitle
         * @parent i2web/components/pairing/customize/room
         * @description Title field from the customization step, to be displayed
         * as the title inside the box-gray-radius, at the top of the box
         */
        subtitle: {
          get() {
            const step = this.attr('customizationStep');
            return step && step.title
              ? step.title
              : 'In what room will this device be installed?';
          },
        },
        /**
         * @property {String} title
         * @parent i2web/components/pairing/customize/room
         * @description Header field from the customization step
         */
        title: {
          get() {
            const step = this.attr('customizationStep');
            return step && step.header
              ? step.header
              : 'Choose a Room';
          },
        },
        /**
         * @property {*} whenComplete
         * @parent i2web/components/pairing/customize/room
         * @description Accept a whenComplete method as an optional parameter for the component;
         * if specified, invoke this method when the halo room is changed
         */
        whenComplete: {
          type: '*',
        },
      },
    });
  </script>
  <script type="events">
    export default {
      '{viewModel.device} halo:room': function valueChanged() {
        const vm = this.viewModel;
        if (vm.attr('whenComplete')) {
          vm.attr('whenComplete')('ROOM');
        }
      },
    };
  </script>
</can-component>

<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-pairing-remove-cloud">
  <template>
    {{#if removing}}
      <div class="box-gray-radius">
        <h4>Removing...</h4>
        <hr>
        <p>{{stepInfo}}</p>
      </div>
    {{else}}
      <div class="box-gray-radius">
        <h4>Removal was successful!</h4>
        <hr>
        <p>Your device has been successfully removed from the Hub.</p>
      </div>
      <button class="btn" ($click)="onButtonAction(pairingDevice)">
        {{buttonLabel}}
      </button>
    {{/if}}
  </template>
  <script type="view-model">
    import CanList from 'can-list';
    import CanMap from 'can-map';
    import 'can-map-define';
    import canRoute from 'can-route';
    import PairingDevice from 'i2web/models/pairing-device';

    export default CanMap.extend({
      define: {
        /**
         * @property {String} buttonLabel
         * @parent i2web/components/pairing/remove/cloud
         * @description Label for action button
         */
        buttonLabel: {
          get() {
            // Improperly Paired Hue gets special treatment
            if (this.attr('productAddress') === 'SERV:product:dead15') {
              if (this.attr('hasRemainingDevices')) {
                return 'Continue';
              }
              return 'Pair Device';
            }
            return 'Re-pair';
          },
        },
        /**
         * @property {Boolean} hasRemainingDevices
         * @parent i2web/components/pairing/remove/cloud
         * @description Indicates if there will be any devices in the pairing cart after this one is removed
         */
        hasRemainingDevices: {
          type: 'boolean',
          value: 'false',
        },
        /**
         * @property {PairingDevice} pairingDevice
         * @parent i2web/components/pairing/remove/cloud
         * @description The specific PairingDevice being removed
         */
        pairingDevice: {
          Type: PairingDevice,
        },
        /**
         * @property {CanList<PairingDevice>} pairingDevices
         * @parent i2web/components/pairing/remove/cloud
         * @description The cart of pairing device instances present in the the subsystem.
         */
        pairingDevices: {
          Type: CanList,
        },
        /**
         * @property {String} productAddress
         * @parent i2web/components/pairing/remove/cloud
         * @description The address of the product being removed
         */
        productAddress: {
          type: 'string',
        },
        /**
         * @property {Array<Object>} removalSteps
         * @parent i2web/components/pairing/remove/cloud
         * @description The device removal steps
         */
        removalSteps: {
          Type: Array,
        },
        /**
         * @function removing
         * @parent i2web/components/pairing/remove/cloud
         * @description Whether the PairingDevice is being removed
         */
        removing: {
          type: 'boolean',
          value: true,
        },
        /**
         * @property {String} stepInfo
         * @parent i2web/components/pairing/remove/cloud
         * @description Removal displayed to the User during the process
         */
        stepInfo: {
          get() {
            const steps = this.attr('removalSteps');
            return (steps && steps.length > 0)
              ? steps[0].info
              : 'The Hub will beep when the device has been removed.';
          },
        },
        /**
         * @property {String} title
         * @parent i2web/components/pairing/remove/cloud
         * @description The page title
         */
        title: {
          get() {
            return 'Remove Device';
          },
        },
      },
     /**
      * @function onButtonAction
      * @parent i2web/components/pairing/remove/cloud
      * @description Method invoked when the action button is pressed after device removal.
      * Re-routes either to Searching screen or back to Product catalog.
      */
      onButtonAction(pairingDevice) {
        if ((!this.attr('productAddress') === 'SERV:product:dead15'
             || this.attr('hasRemainingDevices'))
           && this.attr('onPairRemovedDevice')) {
          this.attr('onPairRemovedDevice')(pairingDevice);
        } else {
          canRoute.attr({
            page: 'product-catalog',
            subpage: 'brands',
            action: undefined,
          });
        }
      },
    });
  </script>
  <script type="events">
    import Analytics from 'i2web/plugins/analytics';
    import Errors from 'i2web/plugins/errors';
    import Notifications from 'i2web/plugins/notifications';
    import Observation from 'can-observation';

    export default {
      inserted() {
        const vm = this.viewModel;
        Observation.ignore(() => {
          vm.attr('productAddress', vm.attr('pairingDevice.pairdev:productAddress'));
          vm.attr('hasRemainingDevices', vm.attr('pairingDevices.length') && vm.attr('pairingDevices.length') > 1);
        })();
        Analytics.tag('device.pairing.remove');
        vm.attr('pairingDevice').Remove().then(({ steps }) => {
          vm.attr('removalSteps', steps);
        }).catch(e => Errors.log(e));
      },
      '{viewModel.pairingDevice} base:Deleted': function deviceRemoved() {
        this.viewModel.attr('removing', false);
        Notifications.success(`Device has been removed.`);
      },
    };
  </script>
</can-component>

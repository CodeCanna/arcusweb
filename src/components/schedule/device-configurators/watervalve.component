<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-schedule-device-configurators-watervalve">
  <template>
    <h4>Choose a state for <strong>{{thing['dev:name']}}</strong></h4>
    <hr />
    <can-import from="i2web/components/control-switch/" />
    {{#if attributes['valv:valvestate']}}
      <div class="switch-value">
        <h4>{{waterValveState}}</h4>
        <arcus-control-switch
          {is-on}="equal(~attributes['valv:valvestate'], ValveCapability.VALVESTATE_OPEN)"
          {toggle}="@toggleValve" />
      </div>
    {{/if}}
    <hr />
    <h4>Select a Time</h4>
    <hr />
  </template>
  <script type="view-model">
    import canMap from 'can-map';
    import 'can-map-define';
    import ValveCapability from 'i2web/models/capability/Valve';

    export default canMap.extend({
      define: {
        /**
         * @property {canMap} attributes
         * @parent i2web/components/schedule/device-configurators/watervalve
         * @description The device attributes used for displaying the configurator
         */
        attributes: {
          type: '*',
        },
        /**
         * @property {Device} thing
         * @parent i2web/components/schedule/device-configurators/watervalve
         * @description The device being scheduled
         */
        thing: {
          type: '*',
        },
        /**
         * @property {String} waterValveState
         * @parent i2web/components/schedule/device-configurators/watervalve
         * @description The desired state for the water valve schedule item
         */
        waterValveState: {
          get() {
            const valvestate = this.attr('attributes.valv:valvestate');
            if (valvestate === ValveCapability.VALVESTATE_OPEN) {
              return 'Open';
            }
            return 'Closed';
          },
        },
      },
      ValveCapability,
      /**
       * @function toggleValve
       * @parent i2web/components/schedule/device-configurators/watervalve
       * @description Toggles the valvestate attribute Open or Closed
       */
      toggleValve() {
        const valvestate = (this.attr('attributes.valv:valvestate') === ValveCapability.VALVESTATE_OPEN) ? ValveCapability.VALVESTATE_CLOSED : ValveCapability.VALVESTATE_OPEN;
        this.attr('attributes.valv:valvestate', valvestate);
      },
    });
  </script>
</can-component>
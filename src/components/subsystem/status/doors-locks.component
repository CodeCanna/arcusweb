<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-subsystem-status-doors-locks">
  <view>
    <div class="total-count">
      {{#if lockDevices}}
        <p>{{unlockedCount}} <span>Unlocked</span></p>
      {{else}}
        {{#if doorDeviceCount}}
          <p>{{openDoorDeviceCount}} <span>Open</span></p>
        {{/if}}
      {{/if}}
    </div>
  </view>
  <script type="view-model">
    import canMap from 'can-map';
    import 'can-map-define';
    import Subsystem from 'i2web/models/subsystem';

    export default canMap.extend({
      define: {
        /**
         * @property {Number} lockDevices
         * @parent i2web/components/subsystem/status/doors-locks
         * @description The number of lockDevices in the subsystem
         */
        lockDevices: {
          get() {
            const subsystem = this.attr('subsystem');
            return subsystem.attr('subdoorsnlocks:lockDevices.length');
          },
        },
        /**
         * @property {Subsystem} subsystem
         * @parent i2web/components/subsystem/status/doors-locks
         * @description The subsystem whose data we care about.
         */
        subsystem: {
          Type: Subsystem,
        },
        /**
         * @property {Number} unlockedCount
         * @parent i2web/components/subsystem/status/doors-locks
         * @description The number of unlocked devices.
         */
        unlockedCount: {
          get() {
            const subsystem = this.attr('subsystem');
            return subsystem.attr('subdoorsnlocks:unlockedLocks.length');
          },
        },
        /**
         * @property {Number} doorDeviceCount
         * @parent i2web/components/subsystem/status/doors-locks
         * @description The number of door classified devices in the subsystem
         */
        doorDeviceCount: {
          get() {
            const motorizedDoorCount = this.attr('subsystem.subdoorsnlocks:motorizedDoorDevices.length') || 0;
            const doorContactSensorCount = this.attr('subsystem.subdoorsnlocks:contactSensorDevices.length') || 0;
            return motorizedDoorCount + doorContactSensorCount;
          },
        },
        /**
         * @property {Number} openDoorDeviceCount
         * @parent i2web/components/subsystem/status/doors-locks
         * @description The number of open door classified devices in the subsystem
         */
        openDoorDeviceCount: {
          get() {
            const openMotorizedDoorCount = this.attr('subsystem.subdoorsnlocks:openMotorizedDoors.length') || 0;
            const openDoorSensorCount = this.attr('subsystem.subdoorsnlocks:openContactSensors.length') || 0;
            return openMotorizedDoorCount + openDoorSensorCount;
          },
        },
      },
    });
  </script>
</can-component>

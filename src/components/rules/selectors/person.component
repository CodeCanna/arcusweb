<!--
Copyright 2019 Arcus Project

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<can-component tag="arcus-rules-selectors-person">
  <template>
    <h3 class="option-title">Choose Person</h3>
    <ul class="option-list">
      {{#each persons}}
        <li class="radio-wrapper" ($click)="selectOption(.)">
          <input type="radio" id="person-{{%index}}" name="person" {$checked}="isSelectedContext(.)" />
          <label for="person-{{%index}}" class="complex-label">
            {{{iconOf(.)}}}
            <span class="name">{{['person:firstName']}}</span>
          </label>
          <div class="check"></div>
        </li>
      {{/each}}
    </ul>
  </template>
  <script type="view-model">
    import $ from 'jquery';
    import canMap from 'can-map';
    import 'can-map-define';
    import 'i2web/helpers/global';
    import Person from 'i2web/models/person';
    import Rule from 'i2web/models/rule';
    import findOptions from './find-options';

    export default canMap.extend({
      define: {
       /**
        * @property {Map} chosen
        * @parent i2web/components/rules/selectors/person
        * @description The key value pairs chosen by the User to satisfy this particular rule
        */
        chosen: {
          Type: canMap,
        },
        /**
         * @property {Map} options
         * @parent i2web/components/rules/selectors/person
         * @description The list of people that will be displayed for the User to select
         */
        options: {
          Type: canMap,
        },
        /**
         * @property {Person.List} persons
         * @parent i2web/components/rules/selectors/person
         * @description The list of persons that will be displayed for the User to select
         */
        persons: {
          Type: Person.List,
        },
        /**
         * @property {String} property
         * @parent i2web/components/rules/selectors/property
         * @description The property name from the template to match up against the Rule context
         */
        property: {
          type: 'string',
        },
        /**
         * @property {Rule} rule
         * @parent i2web/components/rules/selectors/device
         * @description The Rule that we are editing. This will be null, if we are creating a
         * new Rule.
         */
        rule: {
          Type: Rule,
        },
      },
      init() {
        const people = findOptions(this.attr('options'), 'people', 'base:address');
        this.attr('persons', people);
      },
      /**
        * @function isSelectedContext
        * @param {Object} current The current option
        * If there is not a rule, none should be selected by default. If there is a rule
        * We should select the option that is equal to the context. If there is an option
        * in chosen we should use that value.
        *
        * @return {Boolean} Whether the current option is the selected option
        */
      isSelectedContext(current) {
        const chosenProperty = this.attr(`chosen.${this.attr('property')}`);
        let value = '';
        if (this.attr('rule') && !chosenProperty) {
          value = this.attr(`rule.rule:context.${this.attr('property')}`);
        }
        if (chosenProperty) {
          value = chosenProperty;
        }
        return value === current['base:address'];
      },
      /**
       * @function selectOption
       * @param {Map} selected The selected item
       */
      selectOption(selected) {
        this.attr(`chosen.${this.attr('property')}`, selected.attr('base:address'));
        $(`button[id="${this.attr('property')}"`).text(selected.attr('person:firstName'));
      },
    });
  </script>
</can-component>